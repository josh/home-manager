name: Nix

on:
  push:
  workflow_dispatch:

permissions:
  id-token: "write"
  contents: "read"

env:
  NIX_ABORT_ON_WARN: "1"

jobs:
  checks:
    name: Checks

    strategy:
      fail-fast: false
      matrix:
        include:
          - system: "aarch64-darwin"
            os: "macos-15"
          - system: "aarch64-linux"
            os: "ubuntu-24.04-arm"
          - system: "x86_64-linux"
            os: "ubuntu-24.04"

    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            accept-flake-config = true

      - uses: cachix/cachix-action@v15
        with:
          name: josh
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Check Nix flake inputs
        uses: DeterminateSystems/flake-checker-action@v9

      - name: Check flake
        run: |
          nix flake check

  flakes:
    name: Flakes

    strategy:
      fail-fast: false
      matrix:
        include:
          - system: "aarch64-linux"
            os: "ubuntu-24.04-arm"
          - system: "x86_64-linux"
            os: "ubuntu-24.04"

    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            accept-flake-config = true

      - uses: cachix/cachix-action@v15
        with:
          name: josh
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build home-manager
        run: |
          nix run .#home-manager -- --version

      - name: Build home configuration
        run: |
          nix run .#home-manager -- build --flake ".#runner@${{ matrix.system }}" --no-out-link

      - name: Set cachix priority
        run: |
          nix-env --set-flag priority 0 cachix

      - name: Activate home configuration
        run: |
          nix run .#home-manager -- switch --flake ".#runner@${{ matrix.system }}" -b backup

      - name: Fastfetch
        run: fastfetch
